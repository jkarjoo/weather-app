{"version":3,"sources":["components/Display/WeatherDisplay.module.css","components/SearchBar/SearchBar.module.css","components/Icon/WeatherIcon.module.css","assets/rain.svg","components/Controls/WeatherControls.module.css","components/Loading/Loading.module.css","assets/cloud.svg","assets/mist.svg","assets/partcloudy.svg","assets/snow.svg","assets/storm.svg","assets/sun.svg","assets/clearnight.svg","assets/nightsnow.svg","assets/nightstorm.svg","assets/water.svg","assets/wind.svg","components/Forecast/WeatherForecast.module.css","components/App/App.module.css","components/SearchBar/SearchBar.js","components/Icon/WeatherIcon.js","components/Controls/WeatherControls.js","components/Location/Location.js","components/Temperature/Temperature.js","components/Humidity/Humidity.js","components/Wind/Wind.js","components/Description/Description.js","components/Clock/Clock.js","components/Display/WeatherDisplay.js","components/Error/ErrorMessage.js","components/Loading/Loading.js","components/Forecast/WeatherForecast.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","SearchBar","props","inputHandler","submitHandler","onSubmit","e","Paper","className","classes","root","InputBase","placeholder","autoFocus","input","onChange","target","value","Divider","orientation","divider","IconButton","type","WeatherIcon","weatherIconValues","weatherIconTypes","storm","rain","snow","mist","sun","partcloudy","cloud","clearnight","nightstorm","nightsnow","classList","icon","src","id","i","length","indexOf","push","night","getIndex","alt","join","WeatherControls","ButtonGroup","variant","aria-label","Button","bold","onClick","changeUnitHandler","Location","city","country","Temperature","temp","unit","high","low","Humidity","water","humidity","Wind","wind","speed","direction","Description","descript","feelsLike","Clock","createTimer","timer","setInterval","updateTimer","setState","state","date","moment","utc","utcOffset","timezone","format","time","this","window","clearInterval","Component","WeatherDisplay","weather","highTemp","lowTemp","weatherDescription","windDegree","windSpeed","weatherID","convertTemp","Math","round","Grid","container","item","xs","topBar","align","topRightBar","main","mainDivider","iconContainer","convertWindDirection","Alert","elevation","ErrorMessage","handleClose","event","reason","close","Snackbar","open","error","autoHideDuration","onClose","severity","Loading","backdrop","loader","WeatherForecast","searchInput","loading","dataLoaded","fetchWeather","a","fetch","mode","response","json","data","name","sys","feels_like","temp_max","temp_min","weatherMain","description","deg","Container","maxWidth","preventDefault","newUnit","App","Boolean","location","hostname","match","ReactDOM","render","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.e3307ac3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"WeatherDisplay_root__3VLMw\",\"topBar\":\"WeatherDisplay_topBar__azG5F\",\"divider\":\"WeatherDisplay_divider__3dBBK\",\"main\":\"WeatherDisplay_main__HqsIW\",\"mainDivider\":\"WeatherDisplay_mainDivider__1sYYD\",\"temp\":\"WeatherDisplay_temp__2I2r5\",\"iconContainer\":\"WeatherDisplay_iconContainer__1o8XL\",\"icon\":\"WeatherDisplay_icon__32KFw\",\"bold\":\"WeatherDisplay_bold__QNveP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SearchBar_root__1-QYo\",\"input\":\"SearchBar_input__35An9\",\"iconButton\":\"SearchBar_iconButton__rPYAf\",\"divider\":\"SearchBar_divider__1LCGA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"WeatherIcon_icon__3VeSR\",\"night\":\"WeatherIcon_night__eQJok\"};","module.exports = __webpack_public_path__ + \"static/media/rain.c4d86476.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bold\":\"WeatherControls_bold__3ZFqQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Loading_backdrop__3eoaB\",\"loader\":\"Loading_loader__fHWHo\",\"spin\":\"Loading_spin__27TzB\"};","module.exports = __webpack_public_path__ + \"static/media/cloud.1f4b0eb3.svg\";","module.exports = __webpack_public_path__ + \"static/media/mist.d4b5e225.svg\";","module.exports = __webpack_public_path__ + \"static/media/partcloudy.63af564d.svg\";","module.exports = __webpack_public_path__ + \"static/media/snow.4a919ec2.svg\";","module.exports = __webpack_public_path__ + \"static/media/storm.7d674ef4.svg\";","module.exports = __webpack_public_path__ + \"static/media/sun.58c341f0.svg\";","module.exports = __webpack_public_path__ + \"static/media/clearnight.67c5f55a.svg\";","module.exports = __webpack_public_path__ + \"static/media/nightsnow.57cd1cb9.svg\";","module.exports = __webpack_public_path__ + \"static/media/nightstorm.f780f209.svg\";","module.exports = __webpack_public_path__ + \"static/media/water.cc9c157b.svg\";","module.exports = __webpack_public_path__ + \"static/media/wind.15fc7131.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"WeatherForecast_root__QBO1W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__1Jh3p\"};","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport SearchIcon from '@material-ui/icons/Search';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport classes from './SearchBar.module.css';\n\nconst SearchBar = (props) => {\n  const { inputHandler, submitHandler } = props;\n  return (\n    <form onSubmit={(e) => submitHandler(e)}>\n      <Paper className={classes.root}>\n        <InputBase\n          placeholder='Zip Code/City'\n          autoFocus\n          className={classes.input}\n          onChange={(e) => inputHandler(e.target.value)}\n          value={props.input}\n        />\n        <Divider orientation='vertical' className={classes.divider} />\n        <IconButton type='submit'>\n          <SearchIcon />\n        </IconButton>\n      </Paper>\n    </form>\n  );\n};\n\nexport default SearchBar;\n","import React from 'react';\nimport classes from './WeatherIcon.module.css';\nimport cloud from '../../assets/cloud.svg';\nimport mist from '../../assets/mist.svg';\nimport partcloudy from '../../assets/partcloudy.svg';\nimport rain from '../../assets/rain.svg';\nimport snow from '../../assets/snow.svg';\nimport storm from '../../assets/storm.svg';\nimport sun from '../../assets/sun.svg';\nimport clearnight from '../../assets/clearnight.svg';\nimport nightsnow from '../../assets/nightsnow.svg';\nimport nightstorm from '../../assets/nightstorm.svg';\n\nfunction WeatherIcon(props) {\n  const weatherIconValues = [\n    ['11d'], // storm\n    ['09d', '10d'], // rain\n    ['13d'], // snow\n    ['50d'], // mist\n    ['01d'], // clear sky\n    ['02d'], // partcloudy\n    ['03d', '04d'], // cloudy\n    ['01n', '02n', '03n', '04n', '50n'], // Night clear sky/partcloudy/cloudy/mist\n    ['09n', '10n'], // Night rain\n    ['11n'], // Night storm\n    ['13n'], // Night snow\n  ];\n\n  const weatherIconTypes = [\n    storm,\n    rain,\n    snow,\n    mist,\n    sun,\n    partcloudy,\n    cloud,\n    clearnight,\n    rain,\n    nightstorm,\n    nightsnow,\n  ];\n\n  const classList = [classes.icon];\n\n  const getIndex = (id) => {\n    for (let i = 0; i < weatherIconValues.length; i++) {\n      if (weatherIconValues[i].indexOf(id) !== -1) {\n        if (i !== 8 && i > 6) {\n          classList.push(classes.night);\n        }\n        return i;\n      }\n    }\n  };\n\n  return (\n    <img src={weatherIconTypes[getIndex(props.id)]} alt='' className={classList.join(' ')}></img>\n  );\n}\n\nexport default WeatherIcon;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport classes from './WeatherControls.module.css';\n\nconst WeatherControls = (props) => {\n  return (\n    <ButtonGroup variant='text' aria-label='text primary button group'>\n      <Button\n        className={classes.bold}\n        onClick={() => props.changeUnitHandler('C')}\n      >\n        C°\n      </Button>\n      <Button\n        className={classes.bold}\n        onClick={() => props.changeUnitHandler('F')}\n      >\n        F°\n      </Button>\n    </ButtonGroup>\n  );\n};\n\nexport default WeatherControls;\n","import React from 'react';\n\nconst Location = (props) => {\n  return (\n    <h4>\n      {props.city}, {props.country}\n    </h4>\n  );\n};\n\nexport default Location;\n","import React, { Fragment } from 'react';\n\nconst Temperature = (props) => {\n  return (\n    <Fragment>\n      <h1>\n        {props.temp}°{props.unit}\n      </h1>\n      <span>\n        High: {props.high}°{props.unit}\n      </span>\n      <span>\n        Low: {props.low}°{props.unit}\n      </span>\n    </Fragment>\n  );\n};\n\nexport default Temperature;\n","import React, { Fragment } from 'react';\nimport water from '../../assets/water.svg';\nimport classes from '../Display/WeatherDisplay.module.css';\n\nconst Humidity = (props) => {\n  return (\n    <Fragment>\n      <img src={water} alt='' className={classes.icon}></img>\n      <h4>Humidity</h4>\n      <span>{props.humidity}%</span>\n    </Fragment>\n  );\n};\n\nexport default Humidity;\n","import React, { Fragment } from 'react';\nimport wind from '../../assets/wind.svg';\nimport classes from '../Display/WeatherDisplay.module.css';\n\nconst Wind = (props) => {\n  return (\n    <Fragment>\n      <img src={wind} alt='' className={classes.icon}></img>\n      <h4>Wind</h4>\n      <span>\n        {props.speed} mph {props.direction}\n      </span>\n    </Fragment>\n  );\n};\n\nexport default Wind;\n","import React, { Fragment } from 'react';\n\nconst Description = (props) => {\n  return (\n    <Fragment>\n      <span>{props.descript}</span>\n      <span>\n        Feels like: {props.feelsLike}°{props.unit}\n      </span>\n    </Fragment>\n  );\n};\n\nexport default Description;\n","import React, { Fragment, Component } from 'react';\nimport moment from 'moment';\n\nclass Clock extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timer: '',\n      date: moment()\n        .utc()\n        .utcOffset(this.props.timezone / 3600)\n        .format('MMM Do, YYYY'),\n      time: moment()\n        .utc()\n        .utcOffset(this.props.timezone / 3600)\n        .format('h:mm A'),\n    };\n  }\n\n  componentDidMount() {\n    this.createTimer();\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.state.timer);\n  }\n\n  updateTimer() {\n    this.setState({\n      date: moment()\n        .utc()\n        .utcOffset(this.props.timezone / 3600)\n        .format('MMM Do, YYYY'),\n      time: moment()\n        .utc()\n        .utcOffset(this.props.timezone / 3600)\n        .format('h:mm A'),\n    });\n  }\n\n  createTimer = () => {\n    const timer = setInterval(() => {\n      this.updateTimer();\n    }, 1000);\n    this.setState({ timer: timer });\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <h1>{this.state.date}</h1>\n        <h2>{this.state.time}</h2>\n      </Fragment>\n    );\n  }\n}\n\nexport default Clock;\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport WeatherIcon from '../Icon/WeatherIcon';\nimport classes from './WeatherDisplay.module.css';\nimport WeatherControls from '../Controls/WeatherControls';\nimport Location from '../Location/Location';\nimport Temperature from '../Temperature/Temperature';\nimport Humidity from '../Humidity/Humidity';\nimport Wind from '../Wind/Wind';\nimport Description from '../Description/Description';\nimport Clock from '../Clock/Clock';\n\nfunction WeatherDisplay(props) {\n  const {\n    weather: {\n      city,\n      country,\n      feelsLike,\n      temp,\n      highTemp,\n      lowTemp,\n      humidity,\n      weatherDescription,\n      windDegree,\n      windSpeed,\n      weatherID,\n      timezone,\n    },\n    unit,\n    changeUnitHandler,\n  } = props;\n\n  const convertTemp = (temp) => {\n    if (unit === 'C') {\n      return Math.round(temp - 273.15);\n    } else {\n      return Math.round(((temp - 273.15) * 9) / 5 + 32);\n    }\n  };\n\n  const convertWindSpeed = (speed) => {\n    return Math.round(speed * 2.236936);\n  };\n\n  const convertWindDirection = (speed) => {\n    const val = Math.round(speed / 22.5 + 0.5);\n    const arr = [\n      'N',\n      'NNE',\n      'NE',\n      'ENE',\n      'E',\n      'ESE',\n      'SE',\n      'SSE',\n      'S',\n      'SSW',\n      'SW',\n      'WSW',\n      'W',\n      'WNW',\n      'NW',\n      'NNW',\n    ];\n    return arr[val % 16];\n  };\n\n  return (\n    <div className={classes.root}>\n      <Paper>\n        <Grid container>\n          <Grid item xs={8} className={classes.topBar}>\n            <Location city={city} country={country} />\n          </Grid>\n          <Grid item xs={4} align='right' className={classes.topRightBar}>\n            <WeatherControls unit={unit} changeUnitHandler={changeUnitHandler} />\n          </Grid>\n          <Divider variant='middle' className={classes.divider} />\n          <Grid item xs={8} className={classes.main}>\n            <Clock timezone={timezone} />\n            <Description\n              descript={weatherDescription}\n              feelsLike={convertTemp(feelsLike)}\n              unit={unit}\n            />\n          </Grid>\n          <Grid item xs={4} className={classes.temp}>\n            <WeatherIcon id={weatherID} />\n            <Temperature\n              temp={convertTemp(temp)}\n              high={convertTemp(highTemp)}\n              low={convertTemp(lowTemp)}\n              unit={unit}\n            />\n          </Grid>\n          <Divider variant='middle' className={classes.mainDivider} />\n          <Grid item xs={6} className={classes.iconContainer}>\n            <Humidity humidity={humidity} />\n          </Grid>\n          <Grid item xs={6} className={classes.iconContainer}>\n            <Wind\n              speed={convertWindSpeed(windSpeed)}\n              direction={convertWindDirection(windDegree)}\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n}\n\nexport default WeatherDisplay;\n","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant='filled' {...props} />;\n}\n\nconst ErrorMessage = (props) => {\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    props.close();\n  };\n\n  return (\n    <div>\n      <Snackbar open={props.error} autoHideDuration={5000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity='error'>\n          Error: City/Country not found!\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default ErrorMessage;\n","import React from 'react';\nimport classes from './Loading.module.css';\n\nconst Loading = (props) => {\n  return (\n    <div className={classes.backdrop}>\n      <div className={classes.loader}></div>\n    </div>\n  );\n};\n\nexport default Loading;\n","import React, { Component } from 'react';\nimport Container from '@material-ui/core/Container';\nimport SearchBar from '../SearchBar/SearchBar';\nimport WeatherDisplay from '../Display/WeatherDisplay';\nimport classes from './WeatherForecast.module.css';\nimport ErrorMessage from '../Error/ErrorMessage';\nimport Loading from '../Loading/Loading';\n\nclass WeatherForecast extends Component {\n  state = {\n    searchInput: '',\n    loading: false,\n    dataLoaded: false,\n    unit: 'F',\n    error: false,\n    weather: {\n      city: '',\n      country: '',\n      feelsLike: '',\n      temp: '',\n      highTemp: '',\n      lowTemp: '',\n      humidity: '',\n      weatherDescription: '',\n      windDegree: '',\n      windSpeed: '',\n      weatherID: '',\n      timezone: '',\n    },\n  };\n\n  render() {\n    const inputHandler = (value) => {\n      this.setState({ searchInput: value });\n    };\n\n    const fetchWeather = async (input) => {\n      this.setState({ dataLoaded: false, loading: true });\n      try {\n        const response = await fetch(\n          `https://api.openweathermap.org/data/2.5/weather?q=${input}&appid=0a9172422d10d575215bede9fab1503e`,\n          { mode: 'cors' }\n        );\n        const data = await response.json();\n        this.setState({\n          weather: {\n            city: data.name,\n            country: data.sys.country,\n            feelsLike: data.main.feels_like,\n            temp: data.main.temp,\n            highTemp: data.main.temp_max,\n            lowTemp: data.main.temp_min,\n            humidity: data.main.humidity,\n            weatherMain: data.weather[0].main,\n            weatherDescription: data.weather[0].description,\n            weatherID: data.weather[0].icon,\n            windDegree: data.wind.deg,\n            windSpeed: data.wind.speed,\n            timezone: data.timezone,\n          },\n        });\n        this.setState({ dataLoaded: true, loading: false });\n      } catch (err) {\n        this.setState({ loading: false, error: true });\n      }\n    };\n\n    const submitHandler = (e) => {\n      e.preventDefault();\n      fetchWeather(this.state.searchInput);\n    };\n\n    const changeUnitHandler = (newUnit) => {\n      this.setState({ unit: newUnit });\n    };\n\n    const closeError = () => {\n      this.setState({ error: false });\n    };\n\n    return (\n      <Container maxWidth='sm' className={classes.root}>\n        <SearchBar\n          inputHandler={inputHandler}\n          submitHandler={submitHandler}\n          input={this.state.searchInput}\n        />\n        {this.state.dataLoaded ? (\n          <WeatherDisplay\n            weather={this.state.weather}\n            unit={this.state.unit}\n            changeUnitHandler={changeUnitHandler}\n          />\n        ) : null}\n        {this.state.loading ? <Loading /> : null}\n        <ErrorMessage error={this.state.error} close={closeError} />\n      </Container>\n    );\n  }\n}\n\nexport default WeatherForecast;\n","import React from 'react';\nimport WeatherForecast from '../Forecast/WeatherForecast';\nimport classes from './App.module.css';\n\nfunction App() {\n  return (\n    <div className={classes.root}>\n      <WeatherForecast />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nReactDOM.render(\n  <CssBaseline>\n    <App />\n  </CssBaseline>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}